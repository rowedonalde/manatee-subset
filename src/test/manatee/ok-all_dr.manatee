--This is a comment

--Simple Assignment:
my x is 3
my c is (2)
my y is always "hello"
my hello is a string
set hello to "hello"
my z is a number
my apples5 is [0, 2, 4, 1, 3]
my q3 is [0, 1, 2]
set q3[0] to 3

--Type Declaration:
an animal has:
  a whole number feet
  a string color
  a truth value isVertebrate
  a number averageWeight
end

my f is a whole number
set f to 4
my col is a string
set col to "brown"
my isV is a truth value
set isV to yes
my ave is a number
set ave to 24.5

my dog is animal {feet: 4, color: "brown", isVertebrate:yes, averageWeight: 24.5}
my dog2 is animal {feet: f, color: col, isVertebrate: isV, averageWeight: ave}


--Parallel Assignment:
set x, z to 4, 5.5

--Procedure Declaration:
to writeName string name:
  write name
end

to sayHello:
  write "Hello"
end

--Function Declaration:
to get a number double of number x:
  return x * 2
end

--------------------
--Simple statements:
--------------------

--read/write
write "hello world"
write y
write 2
write 2 + 2
write x
read hello
read x

--increment/decrement
increment x by 1
increment z by 1.0
decrement x by 1
decrement x by z

do nothing

--do after waitTime
do writeName "Manny" after 1 second
do sayHello after 3 seconds
--do double x after x seconds --so, functions have to be wrapped?

--Throw exception
fail
fail with "Oops"
fail with y
fail with x

--Modifiers:
write "hello world" if x > 1
increment x by 1 unless c < 0
decrement x by c while x >= 0
increment x by 0.1 until x > 0
-----------------------
--End Simple Statements
-----------------------

--------------
--Conditional:
--------------
if x > 1:
  increment x by 1
  write x
end

if x > 1:
  increment x by c
  write x
else:
  write c
end

if x > 1:
  increment x by 1
  write x
else if x < -0:
  write "negative"
end

if x > 1:
  increment x by 1
  write x
else if yes:
  write "True!"
else:
  write c
end
-----------------
--End Conditional
-----------------

------
--Loop
------
loop:
  write "loop"
end

loop:
  do nothing
end

loop:
  write "Exiting loop"
  exit the loop
end

loop 3 times:
  set x to 0
end

loop x times:
  set x to 0
end

while yes:
  do nothing
end

while x >= 2:
  decrement x by 3
end

until no:
  write "Manatee"
end

until x < 1.31:
  write x
end

for each num in apples5:
  write num
end

for each x in q3:
  set x to x + 1
  write x
end

for each i in x to c:
  write i
end

for each i in x down to c:
  write (c - x) * 2
  for each j in q3:
    write j * c
  end
end

for each y in 1 to 3:
  write y
end

for each y in 1 down to 3:
  write y
end
----------
--End Loop
----------

-----------
--Try Block
-----------
try:
  write x
recover:
  write "There was an error in writing x. Perhaps it was not initialized?"
end
---------------
--End Try Block
---------------

-------------
--Expressions
-------------
write yes or no
my yn is a truth value
set yn to not yes
set yn to yes and no
set yn to no or yes and no
set x to 3 bit or 2
set x to x bit xor x
do nothing if 1 â‰  2
set x to -3
write [1, 2, 3][0]
write length of "hi"
set x to 3 + length of col
write x bit and complement of (x + 1)
write x bit and complement of x + 1
set z to dog.averageWeight
set dog.color to "yellow"
--set x to x x
